import 'package:flutter/material.dart';
import 'package:meet_muslims_client/components/button.dart';
import 'package:meet_muslims_client/components/text_field.dart';
import 'package:meet_muslims_client/pages/commons.dart';
import 'package:meet_muslims_client/pages/on_boarding.dart';
import 'package:meet_muslims_client/pages/sign_in.dart';
import 'package:provider/provider.dart';

import '../provider/user_provider.dart';

class SignUp extends StatefulWidget {
  static const String routeName = '/sign_up';

  const SignUp({Key? key}) : super(key: key);

  @override
  State<SignUp> createState() => _SignUpState();
}

class _SignUpState extends State<SignUp> {
  RegExp regexExp = RegExp(r'^[\w-]+@[\w-]+\.\w+$');
  TextEditingController emailController = TextEditingController();
  TextEditingController passwordController = TextEditingController();
  final FocusNode _emailFocusNode = FocusNode();
  final FocusNode _passwordFocusNode = FocusNode();

  // errors
  String? emailError, passwordError;

  @override
  void dispose() {
    emailController.dispose();
    passwordController.dispose();
    _emailFocusNode.dispose();
    _passwordFocusNode.dispose();
    super.dispose();
  }

  bool validateEmail(String value) {
    // match the email with the regex and set the error, if required
    bool isTrue = regexExp.hasMatch(value);
    if (!isTrue) {
      setState(() {
        emailError = 'Please enter a valid email';
      });
      return isTrue;
    }
    // else, remove it if regex is satisfied
    setState(() {
      emailError = null;
    });
    return isTrue;
  }

  @override
  Widget build(BuildContext context) {
    final userProvider = Provider.of<UserProvider>(context);
    final width = MediaQuery.of(context).size.width;
    final height = MediaQuery.of(context).size.height;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.transparent,
        elevation: 0,
        leading: IconButton(
          onPressed: () {
            Navigator.of(context).pop();
          },
          icon: const Icon(
            Icons.arrow_back_ios,
            color: Colors.black,
          ),
        ),
      ),
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.symmetric(vertical: 0, horizontal: 8),
          child: SingleChildScrollView(
            child: Container(
              height: height,
              // color: Colors.amber,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisAlignment: MainAxisAlignment.end,
                children: [
                  Text(
                    'Sign up',
                    style: Theme.of(context)
                        .textTheme
                        .headlineLarge
                        ?.copyWith(color: Colors.black.withAlpha(200)),
                  ),
                  AppTextField(
                    label: 'Email',
                    controller: emailController,
                    icon: Icons.alternate_email,
                    keyboardType: TextInputType.emailAddress,
                    focusNode: _emailFocusNode,
                    errorText: emailError,
                    onChanged: (value) {
                      if (emailError != null && regexExp.hasMatch(value)) {
                        setState(() {
                          emailError = null;
                        });
                      }
                    },
                    onSubmitted: (value) {
                      _emailFocusNode.unfocus();
                      validateEmail(value);
                      FocusScope.of(context).requestFocus(_passwordFocusNode);
                    },
                  ),
                  AppTextField(
                    label: 'Password',
                    controller: passwordController,
                    icon: Icons.password,
                    keyboardType: TextInputType.visiblePassword,
                    focusNode: _passwordFocusNode,
                    errorText: passwordError,
                    onChanged: (value) {},
                    onSubmitted: (value) {},
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.end,
                    children: [
                      Text(
                        'Forgot Password?',
                        style: Theme.of(context)
                            .textTheme
                            .bodySmall
                            ?.copyWith(fontWeight: FontWeight.bold),
                      ),
                    ],
                  ),
                  AppButton(
                      width: width,
                      height: Theme.of(context).buttonTheme.height,
                      title: 'Continue',
                      color: Theme.of(context)
                          .buttonTheme
                          .colorScheme!
                          .primary,
                      isEnabled: emailError == null,
                      isLoading: false,
                      loadingText: 'Loading...',
                      onPressed: () {
                        bool result = validateEmail(emailController.text);
                        if (!result) return;
                        userProvider.setUser('1', emailController.text);
                        Navigator.pushNamed(context, OnBoarding.routeName);
                      }),
                  const SizedBox(
                    height: 10,
                  ),
                  // the OR divider
                  Row(
                    children: [
                      const Expanded(
                          child: Divider(
                            thickness: 1,
                            endIndent: 10,
                            indent: 5,
                          )),
                      Text(
                        ' OR ',
                        style: Theme.of(context).textTheme.bodySmall,
                      ),
                      const Expanded(
                          child: Divider(
                            thickness: 1,
                            indent: 10,
                            endIndent: 5,
                          )),
                    ],
                  ),
                  const SizedBox(
                    height: 10,
                  ),
                  // the Social button
                  AppButton(
                      width: width,
                      height: Theme.of(context).buttonTheme.height,
                      title: 'Use Social Signup Instead',
                      color: Theme.of(context)
                          .buttonTheme
                          .colorScheme!
                          .secondary,
                      isEnabled: true,
                      isLoading: false,
                      loadingText: 'Loading...',
                      onPressed: () {
                        openBottomModal(context, "Sign up");
                      }),
                  SizedBox(
                    height: 40,
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          'Already registered? ',
                          style: Theme.of(context).textTheme.bodySmall,
                        ),
                        GestureDetector(
                          child: Text(
                            'Log In',
                            style: Theme.of(context)
                                .textTheme
                                .bodySmall
                                ?.copyWith(fontWeight: FontWeight.bold),
                          ),
                          onTap: () {
                            Navigator.of(context)
                                .pushReplacementNamed(SignIn.routeName);
                          },
                        )
                      ],
                    ),
                  )
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }
}
